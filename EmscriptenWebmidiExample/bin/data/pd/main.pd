#N canvas 2090 103 948 923 12;
#X obj 27 26 loadbang;
#X obj 27 76 ofWindow;
#X obj 27 101 ofSetup;
#X obj 27 126 ofBackground 51;
#X msg 27 51 setPosition 30 100 \, setSize 640 360 \, create;
#X obj 27 151 ofSetRectMode 1;
#X floatatom 652 482 5 0 0 0 - - -;
#X obj 638 207 nbx 5 14 -1e+37 1e+37 0 1 empty \$0-height height 0
-8 0 10 -262130 -1 -1 32 256;
#N canvas 67 261 312 233 vuzi 0;
#X obj 46 62 t b b;
#X obj 46 84 until;
#X obj 46 106 t b b;
#X obj 92 106 f;
#X obj 124 106 + 1;
#X obj 156 106 sel;
#X msg 92 84 0;
#X obj 46 40 inlet;
#X obj 174 41 inlet;
#X obj 174 63 f;
#X obj 46 172 outlet;
#X obj 166 172 outlet;
#X obj 106 172 outlet;
#X obj 222 41 loadbang;
#X obj 222 63 \$1;
#X obj 46 128 t b b;
#X obj 106 150 spigot;
#X msg 156 128 1;
#X connect 0 0 1 0;
#X connect 0 1 6 0;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 1 3 0;
#X connect 3 0 4 0;
#X connect 4 0 3 1;
#X connect 4 0 5 0;
#X connect 4 0 11 0;
#X connect 5 0 1 1;
#X connect 5 0 17 0;
#X connect 6 0 3 1;
#X connect 6 0 16 1;
#X connect 7 0 0 0;
#X connect 8 0 9 0;
#X connect 9 0 5 1;
#X connect 13 0 14 0;
#X connect 14 0 5 1;
#X connect 15 0 16 0;
#X connect 15 1 10 0;
#X connect 16 0 12 0;
#X connect 17 0 16 1;
#X restore 592 226 pd vuzi;
#X obj 569 176 metro;
#X obj 691 388 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-nth1 nth1 0 -8 0
10 -262130 -1 -1 0 256;
#X obj 682 351 + 1;
#X obj 652 351 f;
#X obj 750 388 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-nth2 nth2 0 -8 0
10 -262130 -1 -1 0 256;
#X obj 705 326 + 1;
#X obj 675 326 f;
#X obj 652 301 sel 0 1;
#X obj 610 151 expr 30000 / $f1;
#X obj 652 432 sel 0;
#X obj 711 432 sel 0;
#X obj 652 457 f;
#X obj 711 457 f;
#X obj 711 407 mod 16;
#X obj 652 407 mod 16;
#N canvas 664 455 450 435 mscale 0;
#X obj 132 114 / 12;
#X obj 132 303 * 12;
#X obj 132 261 -;
#X obj 132 177 i;
#X obj 132 156 + 0.5;
#X obj 132 324 +;
#X obj 159 219 mod;
#X obj 132 51 inlet;
#X obj 159 387 outlet;
#X obj 132 135 * 1;
#X obj 132 282 / 1;
#X obj 270 51 inlet;
#X obj 186 282 list store;
#X obj 270 72 t a a;
#X obj 270 93 list length;
#X msg 186 261 get \$1 1;
#X obj 132 198 t f f;
#X obj 159 240 t f f;
#X obj 201 30 inlet;
#X obj 186 303 +;
#X obj 201 72 mod 12;
#X obj 132 366 moses;
#X obj 132 345 moses 128;
#X obj 132 93 -;
#X obj 201 51 - 1;
#X connect 0 0 9 0;
#X connect 1 0 5 0;
#X connect 2 0 10 0;
#X connect 3 0 16 0;
#X connect 4 0 3 0;
#X connect 5 0 22 0;
#X connect 6 0 17 0;
#X connect 7 0 23 0;
#X connect 9 0 4 0;
#X connect 10 0 1 0;
#X connect 11 0 13 0;
#X connect 12 0 19 0;
#X connect 13 0 14 0;
#X connect 13 1 12 1;
#X connect 14 0 9 1;
#X connect 14 0 10 1;
#X connect 14 0 6 1;
#X connect 15 0 12 0;
#X connect 16 0 2 0;
#X connect 16 1 6 0;
#X connect 17 0 2 1;
#X connect 17 1 15 0;
#X connect 18 0 24 0;
#X connect 19 0 5 1;
#X connect 20 0 19 1;
#X connect 20 0 23 1;
#X connect 21 1 8 0;
#X connect 22 0 21 0;
#X connect 23 0 0 0;
#X connect 24 0 20 0;
#X restore 652 571 pd mscale;
#X obj 712 546 text get \$0-scales;
#X obj 690 504 nbx 5 14 1 12 0 1 empty \$0-root root 0 -8 0 10 -262130
-1 -1 1 256;
#X obj 712 533 hradio 8 1 1 17 empty \$0-scale Scale 0 -8 0 10 -262130
-1 -1 0;
#X obj 638 251 t f f;
#X obj 652 506 + 40;
#X obj 652 633 pack;
#X obj 724 571 text define -k \$0-scales;
#A set 0 3 7 \; 0 1 \; 0 \;;
#X obj 652 597 makenote 64 250;
#X obj 652 683 list store;
#X msg 652 658 append 144 \$1 \$2;
#X obj 652 708 route list;
#X obj 569 51 t f f;
#X obj 601 76 sel 0;
#X msg 601 101 0;
#X obj 652 733 ofelia f \; arr = a \; ofEM_ASM():sendVarFloatArray("arr")
\;;
#X obj 569 201 t b b b;
#X obj 592 276 f;
#X obj 622 276 + 1;
#X obj 652 276 mod 2;
#X obj 610 126 + 10;
#X obj 27 601 ofDraw;
#X obj 129 751 ofMouseMoved;
#X obj 27 776 list append 0 0;
#N canvas 67 679 669 313 embindFloatControl 0;
#X obj 192 228 change;
#X obj 350 138 change;
#X obj 35 228 change;
#X obj 35 253 outlet;
#X obj 192 253 outlet;
#X obj 350 163 outlet;
#X obj 508 138 change;
#X obj 35 73 t b b b b, f 68;
#X obj 508 163 outlet;
#X obj 350 98 ofelia f \; return embind_3 \;;
#X obj 508 98 ofelia f \; return embind_4 \;;
#X obj 35 98 ofelia d \; local embind = 0 \; function embind_1(f) \;
embind = f \; end \; function M.bang() \; return embind \; end \;;
#X obj 192 98 ofelia d \; local embind = 0 \; function embind_2(f)
\; embind = f \; end \; function M.bang() \; return embind \; end \;
;
#X obj 35 48 metro 10;
#X obj 35 23 loadbang;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 11 0;
#X connect 7 1 12 0;
#X connect 7 2 9 0;
#X connect 7 3 10 0;
#X connect 9 0 1 0;
#X connect 10 0 6 0;
#X connect 11 0 2 0;
#X connect 12 0 0 0;
#X connect 13 0 7 0;
#X connect 14 0 13 0;
#X restore 425 26 pd embindFloatControl;
#X obj 27 726 ofSetColor 0 0 0 200;
#X obj 78 626 metro 10;
#X obj 78 601 loadbang;
#X obj 78 651 ofelia d -k \$0-midiIn;
#A __set local embind = {0 \, 0 \, 0} \; function embind_5(midi) \;
embind = midi \; end \; function M.bang() \; return embind \; end \;
;
#N canvas 73 404 1072 240 routeMidi 0;
#X obj 25 40 r \$0-midiIn;
#X obj 279 40 r \$0-midiIn;
#X obj 533 40 r \$0-midiIn;
#X obj 25 160 outlet;
#X obj 279 160 outlet;
#X obj 533 160 outlet;
#X obj 25 65 ofelia f \; if a[1] == 176 and a[2] == 14 then \; return
a[3]*2 \; end \;;
#X obj 279 65 ofelia f \; if a[1] == 176 and a[2] == 15 then \; return
a[3]*2 \; end \;;
#X obj 533 65 ofelia f \; if a[1] == 176 and a[2] == 16 then \; return
a[3]*2 \; end \;;
#X obj 279 135 change;
#X obj 25 135 change;
#X obj 533 135 change;
#X obj 787 40 r \$0-midiIn;
#X obj 787 160 outlet;
#X obj 787 135 change;
#X obj 787 65 ofelia f \; if a[1] == 176 and a[2] == 17 then \; return
a[3]*2 \; end \;;
#X connect 0 0 6 0;
#X connect 1 0 7 0;
#X connect 2 0 8 0;
#X connect 6 0 10 0;
#X connect 7 0 9 0;
#X connect 8 0 11 0;
#X connect 9 0 4 0;
#X connect 10 0 3 0;
#X connect 11 0 5 0;
#X connect 12 0 15 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X restore 61 701 pd routeMidi;
#X obj 78 676 s \$0-midiIn;
#X obj 27 800 ofelia f \; local m = require("\$0-initImage") \; local
x \, y = a[1] \, a[2] \; local inverseX \, inverseY = ofGetWidth()
- x \, ofGetHeight() - y \; m.image:draw(x \, ofGetHeight() / 2 \,
y / 2 + 10 \, y / 2 + 10) \; m.image:draw(inverseX \, ofGetHeight()
/ 2 \, inverseY / 2 + 10 \, inverseY / 2 + 10) \;;
#X f 83;
#X obj 27 261 ofelia d \$0-embindReceiveBitmap \; function embind_6(w
\, h \, pixel) \; local m = require("\$0-initImage") \; m.image:allocate(w
\, h \, OF_IMAGE_COLOR_ALPHA) \; print("bitmap array size:" \, #pixel
\, "bitmap width:" \, w \, "bitmap height:" \, h) \; local count_1
= 0 \; local count_2 = h \; local count_3 = 0 \; for i = 1 \, h do
\; count_1 = count_1 + (w -((w >> 2) << 2)) * i \; end \; for i = 0
\, w * h - 1 do \; if i % w == 0 then \; count_2 = count_2 - 1 \; count_3
= count_3 + w -((w >> 2) << 2) \; end \; m.image:setColor(i % w \,
count_2 \, ofColor(pixel[i * 3 + 54 + count_3] \, pixel[i * 3 + 55
+ count_3] \, pixel[i * 3 + 56 + count_3] \, 200)) \; end \; m.image:update()
\; end \;;
#X f 73;
#X obj 27 176 ofelia f \$0-initImage \; M.image = ofImage() \; M.image:allocate(1
\, 1 \, OF_IMAGE_COLOR_ALPHA) \; M.image:setColor(ofColor(200 \, 50
\, 50 \, 200)) \; M.image:update() \;;
#X f 48;
#X connect 0 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 57 0;
#X connect 6 0 29 0;
#X connect 7 0 8 1;
#X connect 8 0 41 0;
#X connect 8 2 28 0;
#X connect 9 0 40 0;
#X connect 10 0 23 1;
#X connect 11 0 12 1;
#X connect 12 0 11 0;
#X connect 12 0 23 0;
#X connect 13 0 22 1;
#X connect 14 0 15 1;
#X connect 15 0 14 0;
#X connect 15 0 22 0;
#X connect 16 0 12 0;
#X connect 16 1 15 0;
#X connect 17 0 9 1;
#X connect 18 0 20 0;
#X connect 19 0 21 0;
#X connect 20 0 6 0;
#X connect 21 0 6 0;
#X connect 22 0 19 0;
#X connect 23 0 18 0;
#X connect 24 0 32 0;
#X connect 25 0 24 2;
#X connect 26 0 24 1;
#X connect 27 0 25 0;
#X connect 28 0 20 1;
#X connect 28 1 21 1;
#X connect 29 0 24 0;
#X connect 30 0 34 0;
#X connect 32 0 30 0;
#X connect 32 1 30 1;
#X connect 33 0 35 0;
#X connect 34 0 33 0;
#X connect 35 0 39 0;
#X connect 36 0 9 0;
#X connect 36 1 37 0;
#X connect 37 0 38 0;
#X connect 38 0 15 1;
#X connect 38 0 12 1;
#X connect 40 0 33 0;
#X connect 40 1 8 0;
#X connect 40 2 33 1;
#X connect 41 0 43 0;
#X connect 42 0 41 1;
#X connect 43 0 42 0;
#X connect 43 0 16 0;
#X connect 44 0 17 0;
#X connect 45 0 49 0;
#X connect 46 0 47 1;
#X connect 47 0 55 0;
#X connect 48 0 44 0;
#X connect 48 1 10 0;
#X connect 48 2 13 0;
#X connect 48 3 36 0;
#X connect 49 0 47 0;
#X connect 50 0 52 0;
#X connect 51 0 50 0;
#X connect 52 0 54 0;
#X connect 53 0 49 1;
#X connect 53 1 49 2;
#X connect 53 2 49 3;
#X connect 53 3 49 4;
